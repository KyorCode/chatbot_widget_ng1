!function(t){"use strict";t.module("akit.component.chatservicerButton",[])}(window.angular),function(t){"use strict";t.module("akit.component.chatservicerButton",[])}(window.angular),function(t){"use strict";t.module("akit.component.chatservicerButton").constant("akit.component.chatservicerButton.chatproxyConfig",{chatproxyServiceUrl:"/srv/chatservicer/d"})}(window.angular),function(t){"use strict";t.module("akit.component.chatservicerButton").controller("akit.component.chatservicerButton.chatservicerButtonController",["$scope","$timeout","akit.component.chatservicerButto.chatproxyService",function(t,e,n){function i(){n.getAvailability(t.entitykey).then(function(t){u.available=t.data.available,v=0,a()})["catch"](function(t){u.available=!1,v+=1,a(2*v*s)})}function a(t){t=t||s,c(),l=e(i,t)}function c(){e.cancel(l)}function o(){var e=n.getChatURL(t.entitykey);return e.data.url}function r(e){var n="chatservicer_window",i="width=640,height=480,resizable,scrollbars=yes,status=1",r=t.urlWhenUnavailable||"";if(!e)return void window.open(r,"_blank");var l=o();if(!u.chatWindow.closed)return void u.chatWindow.focus();if(u.disabled=!1,u.available)if(l){c();var s=l;u.chatWindow=window.open(s,n,i),u.disabled=!0}else u.occupied=!0,u.popupOpen=!u.popupOpen,u.available=!1,a(5e3);else u.popupOpen&&u.occupied?u.popupOpen=!1:(u.occupied=!1,u.popupOpen=!u.popupOpen)}var l,u=this,s=2e3,v=0;u.chatWindow={closed:!0},u.available,u.disabled=!1,u.occupied=!1,u.popupOpen=!1,u.clickHandler=r,u.nextPoll=a,u.cancelPoll=c,u.getChatAvailability=i}])}(window.angular),function(t){"use strict";t.module("akit.component.chatservicerButton").service("akit.component.chatservicerButto.chatproxyService",["$http","$interval","$q","akit.component.chatservicerButton.chatproxyConfig",function(t,e,n,i){function a(e){return t.get(i.chatproxyServiceUrl+"/availability?entitykey="+e,{overrideErrorHandling:!0}).then(function(t){return t.data})}function c(e){return t.get(i.chatproxyServiceUrl+"/chaturl?entitykey="+e,{overrideErrorHandling:!0}).then(function(t){return t.data})}var o={};return o.getAvailability=a,o.getChatURL=c,o}])}(window.angular),function(t){"use strict";t.module("akit.component.chatservicerButton").directive("chatservicerButton",["$timeout","$window",function(t,e){return{restrict:"AE",replace:!0,templateUrl:"/assets/chatservicer-button/views/directives/chatservicer-button.htm",controller:"akit.component.chatservicerButton.chatservicerButtonController",controllerAs:"chatservicer",scope:{entitykey:"@",urlWhenUnavailable:"@",availabilityServiceUrl:"@",buttonText:"@",buttonTextNoAgent:"@",getLinkServiceUrl:"@"},link:function(n,i,a,c){function o(){c.getChatAvailability()}n.$watch("chatservicer.available",function(t,e){t===e||c.disabled||(!c.occupied||c.occupied&&t===!0)&&c.nextPoll(2e3)}),n.$on("$destroy",function(){c.chatWindow.closed||c.chatWindow.close(),c.cancelPoll()}),e.addEventListener("focus",function(){t(function(){c.chatWindow.closed&&(c.disabled=!1,c.nextPoll())})}),o()}}}])}(window.angular),angular.module("akit.component.chatservicerButton").run(["$templateCache",function(t){t.put("/assets/chatservicer-button/views/directives/chatservicer-button.htm",'<div class="chatservicer-button">\n    <button type="button"\n            class="button has-icon"\n            ng-class="{\'success\': chatservicer.available}"\n            ng-click="chatservicer.clickHandler(chatservicer.available)">\n        <span class="fa fa-comments"></span>\n        <span ng-if="chatservicer.available">\n            <span>{{ buttonText || \'Chat met een medewerker\'}}</span>\n        </span>\n        <span ng-if="!chatservicer.available">\n            <span>{{buttonTextNoAgent || \'Hulp nodig bij het invullen?\'}}</span>\n        </span>\n    </button>\n</div>')}]);
//# sourceMappingURL=akit.component.chatservicer-button.min.js.map
